// Works, but ugly
policyresources
    | where type =~ "microsoft.authorization/policyassignments"
    | extend params = todynamic(properties.parameters)
    | extend effect = tostring(params.effect)
    | where effect == '{"value":"Deny"}'


policyresources
| where type == "microsoft.authorization/policyassignments"
| extend policyName = name, assignedTo = scope, policyDefId = properties.policyDefinitionId
| join kind=leftouter (
    policyresources
    | where type == "microsoft.authorization/policydefinitions"
    | extend policyDefId = id, effect = properties.policyRule.then.effect
    | project policyDefId, effect
) on policyDefId
| project policyName, assignedTo, effect


// PowerShell
$assignments = Get-AzPolicyAssignment
foreach ($assignment in $assignments) {
    $definition = Get-AzPolicyDefinition -Id $assignment.PolicyDefinitionId
    $effect = $definition.Properties.PolicyRule.then.effect
    [PSCustomObject]@{
        PolicyName  = $assignment.Name
        AssignedTo  = $assignment.Scope
        Effect      = $effect
    }
}


// Azure CLI
az policy assignment list --query "[].{PolicyName:name, AssignedTo:scope, PolicyDefinitionId:policyDefinitionId}" -o table
